import React, { useEffect, useState } from 'react'
import { motion } from 'framer-motion'
interface NavbarProps {
  scrollY: number
}
const Navbar = ({ scrollY }: NavbarProps) => {
  const [isScrolled, setIsScrolled] = useState(false)
  useEffect(() => {
    if (scrollY > 50) {
      setIsScrolled(true)
    } else {
      setIsScrolled(false)
    }
  }, [scrollY])
  return (
    <motion.nav
      className={`fixed top-0 left-0 right-0 z-50 px-6 py-4 transition-all duration-300 ${isScrolled ? 'bg-black/80 backdrop-blur-lg border-b border-white/10' : 'bg-transparent'}`}
      initial={{
        y: -100,
        opacity: 0,
      }}
      animate={{
        y: 0,
        opacity: 1,
      }}
      transition={{
        duration: 0.6,
        ease: 'easeOut',
      }}
    >
      <div className="max-w-7xl mx-auto flex items-center justify-between">
        <motion.div
          className="text-2xl font-bold bg-gradient-to-r from-blue-500 to-purple-600 bg-clip-text text-transparent"
          whileHover={{
            scale: 1.05,
          }}
        >
          Franix
        </motion.div>
        <div className="hidden md:flex items-center space-x-8">
          {['Home', 'Features', 'Tokenomics', 'Roadmap', 'Team'].map(
            (item, index) => (
              <NavItem key={index} text={item} />
            ),
          )}
        </div>
        <motion.button
          className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-500 hover:to-purple-500 text-white px-6 py-2 rounded-full font-medium relative overflow-hidden group"
          whileHover={{
            scale: 1.05,
          }}
          whileTap={{
            scale: 0.95,
          }}
        >
          <span className="relative z-10">Connect Wallet</span>
          <div className="absolute inset-0 opacity-0 group-hover:opacity-30 transition-opacity duration-300 bg-white" />
          <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-all duration-700 bg-gradient-to-r from-blue-400 to-purple-400 blur-xl" />
        </motion.button>
      </div>
    </motion.nav>
  )
}
const NavItem = ({ text }) => {
  return (
    <motion.div
      className="text-sm text-gray-300 hover:text-white cursor-pointer relative"
      whileHover={{
        scale: 1.1,
      }}
    >
      {text}
      <motion.div
        className="absolute -bottom-1 left-0 w-0 h-[2px] bg-gradient-to-r from-blue-500 to-purple-500"
        whileHover={{
          width: '100%',
        }}
        transition={{
          duration: 0.3,
        }}
      />
    </motion.div>
  )
}
export default Navbar
