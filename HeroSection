import React, { useEffect, Children } from 'react'
import { motion, useAnimation } from 'framer-motion'
import { useInView } from 'react-intersection-observer'
const HeroSection = () => {
  const controls = useAnimation()
  const [ref, inView] = useInView({
    threshold: 0.3,
    triggerOnce: true,
  })
  useEffect(() => {
    if (inView) {
      controls.start('visible')
    }
  }, [controls, inView])
  const containerVariants = {
    hidden: {
      opacity: 0,
    },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
        delayChildren: 0.3,
      },
    },
  }
  const itemVariants = {
    hidden: {
      y: 20,
      opacity: 0,
    },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        duration: 0.8,
        ease: 'easeOut',
      },
    },
  }
  return (
    <motion.section
      ref={ref}
      className="relative min-h-screen w-full flex items-center justify-center pt-20 pb-10 overflow-hidden"
      initial="hidden"
      animate={controls}
      variants={containerVariants}
    >
      {/* Animated background elements */}
      <div className="absolute inset-0 overflow-hidden">
        {Array(8)
          .fill(0)
          .map((_, i) => (
            <motion.div
              key={i}
              className="absolute rounded-full bg-gradient-to-r from-blue-600/20 to-purple-600/20"
              style={{
                width: Math.random() * 300 + 100,
                height: Math.random() * 300 + 100,
                left: `${Math.random() * 100}%`,
                top: `${Math.random() * 100}%`,
              }}
              animate={{
                x: [0, Math.random() * 30 - 15],
                y: [0, Math.random() * 30 - 15],
                scale: [1, Math.random() * 0.2 + 0.9],
              }}
              transition={{
                duration: Math.random() * 5 + 5,
                repeat: Infinity,
                repeatType: 'reverse',
              }}
            />
          ))}
      </div>
      {/* Grid lines */}
      <div className="absolute inset-0 bg-grid-pattern opacity-10" />
      <div className="container mx-auto px-6 z-10">
        <div className="flex flex-col md:flex-row items-center justify-between">
          <div className="w-full md:w-1/2 mb-12 md:mb-0">
            <motion.div variants={itemVariants}>
              <div className="inline-block px-4 py-2 rounded-full bg-white/5 border border-white/10 text-sm text-blue-400 mb-6">
                The Future of Decentralized Finance
              </div>
            </motion.div>
            <motion.h1
              variants={itemVariants}
              className="text-5xl md:text-7xl font-bold mb-6"
            >
              <span className="bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-500">
                Redefining Web3
              </span>
              <span className="block text-white">Experience</span>
            </motion.h1>
            <motion.p
              variants={itemVariants}
              className="text-gray-400 text-lg mb-8 max-w-md"
            >
              Seamless blockchain integration with next-generation security and
              lightning-fast transactions for the modern digital economy.
            </motion.p>
            <motion.div
              variants={itemVariants}
              className="flex flex-wrap gap-4"
            >
              <motion.button
                className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-500 hover:to-purple-500 text-white px-8 py-3 rounded-full font-medium relative overflow-hidden group"
                whileHover={{
                  scale: 1.05,
                }}
                whileTap={{
                  scale: 0.95,
                }}
              >
                <span className="relative z-10">Get Started</span>
                <div className="absolute inset-0 opacity-0 group-hover:opacity-30 transition-opacity duration-300 bg-white" />
              </motion.button>
              <motion.button
                className="bg-white/5 backdrop-blur-sm hover:bg-white/10 text-white border border-white/10 px-8 py-3 rounded-full font-medium"
                whileHover={{
                  scale: 1.05,
                }}
                whileTap={{
                  scale: 0.95,
                }}
              >
                Learn More
              </motion.button>
            </motion.div>
          </div>
          <div className="w-full md:w-1/2 flex justify-center">
            <motion.div className="relative" variants={itemVariants}>
              <motion.div
                className="w-64 h-64 md:w-80 md:h-80 rounded-full bg-gradient-to-r from-blue-600 to-purple-600 blur-2xl opacity-30 absolute -inset-4"
                animate={{
                  scale: [1, 1.2, 1],
                  opacity: [0.3, 0.5, 0.3],
                }}
                transition={{
                  duration: 8,
                  repeat: Infinity,
                  repeatType: 'reverse',
                }}
              />
              <motion.div
                className="w-64 h-64 md:w-80 md:h-80 relative z-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center overflow-hidden"
                animate={{
                  rotateY: [0, 360],
                }}
                transition={{
                  duration: 20,
                  repeat: Infinity,
                  ease: 'linear',
                }}
              >
                <div className="absolute inset-1 rounded-full bg-black flex items-center justify-center overflow-hidden">
                  <div className="absolute inset-0 bg-grid-radial opacity-30" />
                  <div className="text-5xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-500">
                    F
                  </div>
                </div>
              </motion.div>
              {/* Floating elements */}
              {[0, 1, 2].map((i) => (
                <motion.div
                  key={i}
                  className="absolute w-16 h-16 rounded-lg bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center"
                  style={{
                    left: `${['-20%', '100%', '40%'][i]}`,
                    top: `${['20%', '50%', '80%'][i]}`,
                  }}
                  animate={{
                    y: [0, -15, 0],
                    rotate: [0, 10, 0],
                    scale: [1, 1.05, 1],
                  }}
                  transition={{
                    duration: 4 + i,
                    repeat: Infinity,
                    repeatType: 'reverse',
                    delay: i * 0.5,
                  }}
                >
                  <div className="absolute inset-0.5 rounded-lg bg-black flex items-center justify-center">
                    {['‚ö°', 'üîí', 'üåê'][i]}
                  </div>
                </motion.div>
              ))}
            </motion.div>
          </div>
        </div>
      </div>
      <motion.div
        className="absolute bottom-10 left-0 right-0 flex justify-center"
        animate={{
          y: [0, 10, 0],
        }}
        transition={{
          duration: 2,
          repeat: Infinity,
        }}
      >
        <div className="w-8 h-12 rounded-full border-2 border-white/20 flex justify-center p-1">
          <motion.div
            className="w-1 h-3 bg-white rounded-full"
            animate={{
              y: [0, 15, 0],
            }}
            transition={{
              duration: 2,
              repeat: Infinity,
            }}
          />
        </div>
      </motion.div>
    </motion.section>
  )
}
export default HeroSection
